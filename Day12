# Day 12 - SQL Advent Calendar

## Question:

A collector wants to identify the top 3 snow globes with the highest number of figurines. Write a query to rank them and include their `globe_name`, number of figurines, and `material`.

**Tables:**

**`snow_globes`**

| globe_id | globe_name        | volume_cm3 | material |
|----------|-------------------|------------|----------|
| 1        | Winter Wonderland | 500        | Glass    |
| 2        | Santas Workshop   | 300        | Plastic  |
| 3        | Frozen Forest     | 400        | Glass    |
| 4        | Holiday Village   | 600        | Glass    |

**`figurines`**

| figurine_id | globe_id | figurine_type |
|-------------|----------|---------------|
| 1           | 1        | Snowman       |
| 2           | 1        | Tree          |
| 3           | 2        | Santa Claus   |
| 4           | 2        | Elf           |
| 5           | 2        | Gift Box      |
| 6           | 3        | Reindeer      |
| 7           | 3        | Tree          |
| 8           | 4        | Snowman       |
| 9           | 4        | Santa Claus   |
| 10          | 4        | Tree          |
| 11          | 4        | Elf           |
| 12          | 4        | Gift Box      |

---

## Answer:

To identify the top 3 snow globes with the highest number of figurines, we need to:
1. Count the number of figurines for each snow globe.
2. Rank the snow globes by the number of figurines in descending order.
3. Return the `globe_name`, the count of figurines, and the `material`.

Here is the SQL query to achieve this:

```sql
-- Day 12 - SQL Advent Calendar

-- Rank the top 3 snow globes by the number of figurines

SELECT 
    sg.globe_name,
    COUNT(f.figurine_id) AS num_figurines,
    sg.material,
    RANK() OVER (ORDER BY COUNT(f.figurine_id) DESC) AS rank_by_figurines
FROM snow_globes sg
JOIN figurines f ON sg.globe_id = f.globe_id
GROUP BY sg.globe_id, sg.globe_name, sg.material
ORDER BY rank_by_figurines
LIMIT 3;
